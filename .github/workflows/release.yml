name: Module midi

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Linux Deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev

      - name: Build
        shell: bash
        run: |
          yarn
          yarn build

      - name: Build & Pack Linux x64
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          yarn build:x64:linux
          mv ./build/linux-x64/module-midi ./build/linux-x64/${{ github.event.repository.name }}-linux-x64-${{ steps.get_version.outputs.version }}
          mkdir -p ./build/linux-x64/midi/build/Release
          cp ./node_modules/midi/build/Release/midi.node ./build/linux-x64/midi/build/Release/midi.node
          cd ./build/linux-x64/
          npx bestzip ../${{ github.event.repository.name }}-linux-x64-${{ steps.get_version.outputs.version }}.zip .

      - name: Build & Pack Win x64
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          yarn build:x64:win
          mv ./build/win-x64/module-midi.exe ./build/win-x64/${{ github.event.repository.name }}-win-x64-${{ steps.get_version.outputs.version }}.exe
          mkdir -p ./build/win-x64/midi/build/Release
          cp ./node_modules/midi/build/Release/midi.node ./build/win-x64/midi/build/Release/midi.node
          cd ./build/win-x64/
          npx bestzip ../${{ github.event.repository.name }}-win-x64-${{ steps.get_version.outputs.version }}.zip .

      - name: Build & Pack Macos x64
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          yarn build:x64:macos
          mv ./build/macos-x64/module-midi ./build/macos-x64/${{ github.event.repository.name }}-macos-x64-${{ steps.get_version.outputs.version }}
          mkdir -p ./build/macos-x64/midi/build/Release
          cp ./node_modules/midi/build/Release/midi.node ./build/macos-x64/midi/build/Release/midi.node
          cd ./build/macos-x64/
          npx bestzip ../${{ github.event.repository.name }}-macos-x64-${{ steps.get_version.outputs.version }}.zip .

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            ./build/*.zip

      - name: Artifact Linux x64
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-linux-x64-${{ steps.get_version.outputs.version }}
          path: ./build/linux-x64
          retention-days: 1

      - name: Artifact Win x64
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-win-x64-${{ steps.get_version.outputs.version }}
          path: ./build/win-x64
          retention-days: 1

      - name: Artifact Macos x64
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-macos-x64-${{ steps.get_version.outputs.version }}
          path: ./build/macos-x64
          retention-days: 1